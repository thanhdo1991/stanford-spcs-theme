// Susy grid.
$debug: false; // Set true to show the grid.
$show-image: 'hide';

@if $debug == false {
  $show-image: 'hide';
} @else {
  $show-image: 'show';
}

// Grid definition for all breakpoints. Use http://gridcalculator.dk/#/1200/12/52/20 to generate the grid.
$susy: (
  flow: ltr,
  math: fluid,
  container-position: rem($container-margin),
  container: auto,
  columns: $column-mobile,
  gutters: 15px / 44px,
  column-width: false,
  debug: (
    image: $show-image,
    color: rgba($black, .25),
    output: background,
    toggle: top right,
  )
);

$susy-tablet: (
  container-position: rem($container-margin-tablet),
  container: auto,
  columns: $column-tablet,
  gutters: 38px / 59px,
  column-width: false,
  debug: (
    image: $show-image,
    color: rgba($gray, .25),
    output: background,
    toggle: top right,
  ),
);

$susy-desktop: (
  columns: $column-desktop,
  gutters: 21.82px / 60px,
  container-position: center,
  container: rem($container),
  debug: (
    image: $show-image,
    color: rgba($silver, .25),
    output: background,
    toggle: top right,
  ),
);

$susy-desktop-wide: (
  columns: $column-desktop,
  gutters: 21.82px / 60px,
  container-position: center,
  container: rem($container-wide),
  debug: (
    image: $show-image,
    color: rgba($silver, .25),
    output: background,
    toggle: top right,
  ),
);

$susy-desktop-superwide: (
  columns: $column-desktop,
  gutters: 21.82px / 60px,
  container-position: center,
  container: rem($container-superwide),
  debug: (
    image: $show-image,
    color: rgba($silver, .25),
    output: background,
    toggle: top right,
  ),
);

// Pick specific breakpoint.
$susy-media: (
  // max-width: 769px
  mobileOnly: (
    media: screen,
    max-width: em($tablet - 1) * 1em,
  ),

  // max-width: 1999px
  mobileTabletOnly: (
    media: screen,
    max-width: em($desktop - 1) * 1em,
  ),

  // min-width: 480px
  mobileLandscape: em($mobile-landscape) * 1em,

  // min-width: 768px and max-width: 1999px
  tabletOnly: (
    media: screen,
    min-width: em($tablet) * 1em,
    max-width: em($desktop - 1) * 1em,
  ),

  // min-width: 768px
  tablet: em($tablet) * 1em,

  // min-width: 1024
  desktop: em($desktop) * 1em,

  // min-width: 1280px
  desktopWide: em($desktop-wide) * 1em,

  // min-width: 1280px
  desktopSuperwide: em($desktop-superwide) * 1em,
);


.container {
  @include container();

  @include susy-media(tablet) {
    @include container($susy-tablet);
  }

  @include susy-media(desktop) {
    @include container($susy-desktop);
  }

  @include susy-media(desktopWide) {
    @include container($susy-desktop-wide);
  }

  @include susy-media(desktopSuperwide) {
    @include container($susy-desktop-superwide);
  }
}
